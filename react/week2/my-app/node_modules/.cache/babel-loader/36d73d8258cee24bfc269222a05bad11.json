{"ast":null,"code":"var _jsxFileName = \"/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList'; // const TodoItem = ({ todo, toggleCompleted, deleteTodo }) => (\n//   <div\n//     style={{\n//       border: '2px solid black',\n//       maxWidth: 300,\n//       margin: 9,\n//       padding: 15\n//     }}>\n//     <li\n//       style={{ textDecoration: todo.completed ? 'line-through red' : 'none' }}>\n//       <input\n//         type='checkbox'\n//         checked={todo.completed}\n//         onChange={toggleCompleted}\n//       />\n//       <span\n//         style={{\n//           paddingRight: 5,\n//           paddingLeft: 5\n//         }}>\n//         {todo.description}\n//       </span>\n//       <button\n//         style={{\n//           backgroundColor: 'yellow'\n//         }}\n//         onClick={deleteTodo}>\n//         Delete Todo\n//       </button>\n//     </li>\n//   </div>\n// );\n// class AddTodoForm extends React.Component {\n//   state = {\n//     value: ''\n//   };\n//   handleChange = event =>\n//     this.setState({\n//       value: event.target.value\n//     });\n//   render() {\n//     const { addTodoItem } = this.props;\n//     return (\n//       <form\n//         onSubmit={event => {\n//           event.preventDefault();\n//           addTodoItem(this.state.value);\n//           this.setState({\n//             value: ''\n//           });\n//         }}>\n//         <input\n//           type='text'\n//           value={this.state.value}\n//           onChange={this.handleChange}\n//         />\n//         <button\n//           style={{\n//             backgroundColor: 'lightGreen'\n//           }}\n//           type='submit'>\n//           Add a todo\n//         </button>\n//         ;\n//       </form>\n//     );\n//   }\n// }\n// class TodoList extends React.Component {\n//   state = {\n//     todos: [\n//       {\n//         description: 'Get out of bed',\n//         completed: false\n//       },\n//       {\n//         description: 'Brush teeth',\n//         completed: false\n//       },\n//       {\n//         description: 'Eat breakfast',\n//         completed: false\n//       }\n//     ]\n//   };\n//   addTodoItem = description => {\n//     const newTodo = {\n//       description,\n//       completed: false\n//     };\n//     this.setState({\n//       todos: [...this.state.todos, newTodo]\n//     });\n//   };\n//   toggleCompleted = currentIndex => {\n//     this.setState({\n//       todos: this.state.todos.map((todo, index) => {\n//         if (currentIndex === index) {\n//           return {\n//             ...todo,\n//             completed: !todo.completed\n//           };\n//         } else {\n//           return todo;\n//         }\n//       })\n//     });\n//   };\n//   deleteTodo = currentIndex => {\n//     this.setState({\n//       todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n//     });\n//   };\n//   render() {\n//     const noTodos = !this.state.todos.length;\n//     return (\n//       <>\n//         <AddTodoForm addTodoItem={this.addTodoItem} />\n//         {noTodos ? (\n//           'No items!'\n//         ) : (\n//           <ul style={{ listStyle: 'none', paddingLeft: '0px' }}>\n//             {this.state.todos.map((todo, index) => (\n//               <TodoItem\n//                 style={{ border: '2px', borderColor: 'black' }}\n//                 key={index}\n//                 todo={todo}\n//                 toggleCompleted={() => this.toggleCompleted(index)}\n//                 deleteTodo={() => this.deleteTodo(index)}\n//               />\n//             ))}\n//           </ul>\n//         )}\n//       </>\n//     );\n//   }\n// }\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }\n}, \"Todo list\"), /*#__PURE__*/React.createElement(TodoList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js"],"names":["React","ReactDOM","TodoList","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,QAAP,MAAqB,YAAreACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TodoList from './TodoList';\n\n// const TodoItem = ({ todo, toggleCompleted, deleteTodo }) => (\n//   <div\n//     style={{\n//       border: '2px solid black',\n//       maxWidth: 300,\n//       margin: 9,\n//       padding: 15\n//     }}>\n//     <li\n//       style={{ textDecoration: todo.completed ? 'line-through red' : 'none' }}>\n//       <input\n//         type='checkbox'\n//         checked={todo.completed}\n//         onChange={toggleCompleted}\n//       />\n//       <span\n//         style={{\n//           paddingRight: 5,\n//           paddingLeft: 5\n//         }}>\n//         {todo.description}\n//       </span>\n//       <button\n//         style={{\n//           backgroundColor: 'yellow'\n//         }}\n//         onClick={deleteTodo}>\n//         Delete Todo\n//       </button>\n//     </li>\n//   </div>\n// );\n\n// class AddTodoForm extends React.Component {\n//   state = {\n//     value: ''\n//   };\n\n//   handleChange = event =>\n//     this.setState({\n//       value: event.target.value\n//     });\n//   render() {\n//     const { addTodoItem } = this.props;\n\n//     return (\n//       <form\n//         onSubmit={event => {\n//           event.preventDefault();\n//           addTodoItem(this.state.value);\n//           this.setState({\n//             value: ''\n//           });\n//         }}>\n//         <input\n//           type='text'\n//           value={this.state.value}\n//           onChange={this.handleChange}\n//         />\n//         <button\n//           style={{\n//             backgroundColor: 'lightGreen'\n//           }}\n//           type='submit'>\n//           Add a todo\n//         </button>\n//         ;\n//       </form>\n//     );\n//   }\n// }\n\n// class TodoList extends React.Component {\n//   state = {\n//     todos: [\n//       {\n//         description: 'Get out of bed',\n//         completed: false\n//       },\n//       {\n//         description: 'Brush teeth',\n//         completed: false\n//       },\n//       {\n//         description: 'Eat breakfast',\n//         completed: false\n//       }\n//     ]\n//   };\n\n//   addTodoItem = description => {\n//     const newTodo = {\n//       description,\n//       completed: false\n//     };\n//     this.setState({\n//       todos: [...this.state.todos, newTodo]\n//     });\n//   };\n\n//   toggleCompleted = currentIndex => {\n//     this.setState({\n//       todos: this.state.todos.map((todo, index) => {\n//         if (currentIndex === index) {\n//           return {\n//             ...todo,\n//             completed: !todo.completed\n//           };\n//         } else {\n//           return todo;\n//         }\n//       })\n//     });\n//   };\n\n//   deleteTodo = currentIndex => {\n//     this.setState({\n//       todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n//     });\n//   };\n\n//   render() {\n//     const noTodos = !this.state.todos.length;\n//     return (\n//       <>\n//         <AddTodoForm addTodoItem={this.addTodoItem} />\n//         {noTodos ? (\n//           'No items!'\n//         ) : (\n//           <ul style={{ listStyle: 'none', paddingLeft: '0px' }}>\n//             {this.state.todos.map((todo, index) => (\n//               <TodoItem\n//                 style={{ border: '2px', borderColor: 'black' }}\n//                 key={index}\n//                 todo={todo}\n//                 toggleCompleted={() => this.toggleCompleted(index)}\n//                 deleteTodo={() => this.deleteTodo(index)}\n//               />\n//             ))}\n//           </ul>\n//         )}\n//       </>\n//     );\n//   }\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Todo list</h1>\n    <TodoList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}