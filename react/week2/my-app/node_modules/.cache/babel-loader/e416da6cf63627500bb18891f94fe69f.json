{"ast":null,"code":"var _jsxFileName = \"/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst TodoListItem = (props, deleteTodo) => /*#__PURE__*/React.createElement(\"li\", {\n  style: {\n    textDecoration: props.todo.completed ? 'line-through' : 'none'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, props.todo.name), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, props.todo.description), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  checked: props.todo.completed,\n  onChange: props.toggleComplete,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: this.deleteTodo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, \"Delete Todo\"));\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: 'Get out of bed',\n        completed: false\n      }, {\n        id: 2,\n        description: 'Brush teeth',\n        completed: false\n      }, {\n        id: 3,\n        description: 'Eat breakfast',\n        completed: false\n      }]\n    };\n\n    this.addTodoItem = () => {\n      const newTodo = {\n        id: 4,\n        description: 'eat lanch'\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    this.toggleComplete = currentIndex => {\n      this.setState({\n        todos: this.state.todos.map((todo, index) => {\n          if (currentIndex === index) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.deleteTodo = currentIndex => {\n      this.setState({\n        todos: this.todos.filter((todos, index) => currentIndex !== index)\n      });\n    };\n  }\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, noTodos ? 'Not todos!' : /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, this.state.todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoListItem, {\n      key: index,\n      todo: todo,\n      toggleComplete: () => this.toggleComplete(index),\n      deleteTodo: () => this.deleteTodo(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTodoItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Add Todo\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }\n}, \"My todo list\"), /*#__PURE__*/React.createElement(TodoList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js"],"names":["React","ReactDOM","serviceWorker","TodoListItem","props","deleteTodo","textDecoration","todo","completed","name","description","toggleComplete","TodoList","Component","state","todos","id","addTodoItem","newTodo","setState","currentIndex","map","index","filter","render","noTodos","length","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst TodoListItem = (props, deleteTodo) => (\n  <li\n    style={{ textDecoration: props.todo.completed ? 'line-through' : 'none' }}>\n    <div>{props.todo.name}</div>\n    <div>{props.todo.description}</div>\n    <input\n      type='checkbox'\n      checked={props.todo.completed}\n      onChange={props.toggleComplete}\n    />\n    <button onClick={this.deleteTodo}>Delete Todo</button>\n  </li>\n);\n\nclass TodoList extends React.Component {\n  state = {\n    todos: [\n      {\n        id: 1,\n        description: 'Get out of bed',\n        completed: false\n      },\n      {\n        id: 2,\n        description: 'Brush teeth',\n        completed: false\n      },\n      {\n        id: 3,\n        description: 'Eat breakfast',\n        completed: false\n      }\n    ]\n  };\n\n  addTodoItem = () => {\n    const newTodo = {\n      id: 4,\n      description: 'eat lanch'\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  };\n\n  toggleComplete = currentIndex => {\n    this.setState({\n      todos: this.state.todos.map((todo, index) => {\n        if (currentIndex === index) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n\n  deleteTodo = currentIndex => {\n    this.setState({\n      todos: this.todos.filter((todos, index) => currentIndex !== index)\n    });\n  };\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return (\n      <>\n        {noTodos ? (\n          'Not todos!'\n        ) : (\n          <ul>\n            {this.state.todos.map((todo, index) => (\n              <TodoListItem\n                key={index}\n                todo={todo}\n                toggleComplete={() => this.toggleComplete(index)}\n                deleteTodo={() => this.deleteTodo(index)}\n              />\n            ))}\n          </ul>\n        )}\n        <button onClick={this.addTodoItem}>Add Todo</button>\n      </>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>My todo list</h1>\n    <TodoList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}