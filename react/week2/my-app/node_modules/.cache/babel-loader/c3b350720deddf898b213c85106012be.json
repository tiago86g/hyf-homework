{"ast":null,"code":"var _jsxFileName = \"/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst TodoListItem = ({\n  todo,\n  toggleComplete,\n  deleteTodo\n}) => /*#__PURE__*/React.createElement(\"li\", {\n  style: {\n    textDecoration: todo.completed ? 'line-through' : 'none'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, todo.name), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, todo.description), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  checked: todo.completed,\n  onChange: toggleComplete,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: deleteTodo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, \"Delete Todo\"));\n\nconst AddTodoForm = ({\n  addTodoItem\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTodoItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }, \"Add Todo\");\n};\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: 'Get out of bed',\n        completed: false\n      }, {\n        id: 2,\n        description: 'Brush teeth',\n        completed: false\n      }, {\n        id: 3,\n        description: 'Eat breakfast',\n        completed: false\n      }]\n    };\n\n    this.addTodoItem = () => {\n      const newTodo = {\n        description: 'Eat lanch',\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    this.toggleComplete = currentIndex => {\n      this.setState({\n        todos: this.state.todos.map((todo, index) => {\n          if (currentIndex === index) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.deleteTodo = currentIndex => {\n      this.setState({\n        todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n      });\n    };\n  }\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, noTodos ? 'No items!' : /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, this.state.todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoListItem, {\n      key: index,\n      todo: todo,\n      toggleComplete: () => this.toggleComplete(index),\n      deleteTodo: () => this.deleteTodo(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(AddTodoForm, {\n      addTodoItem: this.addTodoItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }\n}, \"My todo list\"), /*#__PURE__*/React.createElement(TodoList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js"],"names":["React","ReactDOM","serviceWorker","TodoListItem","todo","toggleComplete","deleteTodo","textDecoration","completed","name","description","AddTodoForm","addTodoItem","TodoList","Component","state","todos","id","newTodo","setState","currentIndex","map","index","filter","_todos","render","noTodos","length","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA;AAAxB,CAAD,kBACnB;AAAI,EAAA,KAAK,EAAE;AAAEC,IAAAA,cAAc,EAAEH,IAAI,CAACI,SAAL,GAAiB,cAAjB,GAAkC;AAApD,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMJ,IAAI,CAACK,IAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAML,IAAI,CAACM,WAAX,CAFF,eAGE;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,OAAO,EAAEN,IAAI,CAACI,SAArC;AAAgD,EAAA,QAAQ,EAAEH,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,eAIE;AAAQ,EAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;;AASA,MAAMK,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACvC,sBAAO;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,CAFD;;AAIA,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEP,QAAAA,WAAW,EAAE,gBAFf;AAGEF,QAAAA,SAAS,EAAE;AAHb,OADK,EAML;AACES,QAAAA,EAAE,EAAE,CADN;AAEEP,QAAAA,WAAW,EAAE,aAFf;AAGEF,QAAAA,SAAS,EAAE;AAHb,OANK,EAWL;AACES,QAAAA,EAAE,EAAE,CADN;AAEEP,QAAAA,WAAW,EAAE,eAFf;AAGEF,QAAAA,SAAS,EAAE;AAHb,OAXK;AADD,KAD6B;;AAAA,SAqBrCI,WArBqC,GAqBvB,MAAM;AAClB,YAAMM,OAAO,GAAG;AACdR,QAAAA,WAAW,EAAE,WADC;AAEdF,QAAAA,SAAS,EAAE;AAFG,OAAhB;AAIA,WAAKW,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBE,OAAtB;AADK,OAAd;AAGD,KA7BoC;;AAAA,SA+BrCb,cA/BqC,GA+BpBe,YAAY,IAAI;AAC/B,WAAKD,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqB,CAACjB,IAAD,EAAOkB,KAAP,KAAiB;AAC3C,cAAIF,YAAY,KAAKE,KAArB,EAA4B;AAC1B,mBAAO,EACL,GAAGlB,IADE;AAELI,cAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAFZ,aAAP;AAID,WALD,MAKO;AACL,mBAAOJ,IAAP;AACD;AACF,SATM;AADK,OAAd;AAYD,KA5CoC;;AAAA,SA8CrCE,UA9CqC,GA8CxBc,YAAY,IAAI;AAC3B,WAAKD,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,MAAjB,CAAwB,CAACC,MAAD,EAASF,KAAT,KAAmBF,YAAY,KAAKE,KAA5D;AADK,OAAd;AAGD,KAlDoC;AAAA;;AAoDrCG,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAAC,KAAKX,KAAL,CAAWC,KAAX,CAAiBW,MAAlC;AACA,wBACE,0CACGD,OAAO,GACN,WADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqB,CAACjB,IAAD,EAAOkB,KAAP,kBACpB,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAElB,IAFR;AAGE,MAAA,cAAc,EAAE,MAAM,KAAKC,cAAL,CAAoBiB,KAApB,CAHxB;AAIE,MAAA,UAAU,EAAE,MAAM,KAAKhB,UAAL,CAAgBgB,KAAhB,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAJJ,eAeE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKV,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AAzEoC;;AA4EvCX,QAAQ,CAACwB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAKEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;;AACA3B,aAAa,CAAC4B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst TodoListItem = ({ todo, toggleComplete, deleteTodo }) => (\n  <li style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}>\n    <div>{todo.name}</div>\n    <div>{todo.description}</div>\n    <input type='checkbox' checked={todo.completed} onChange={toggleComplete} />\n    <button onClick={deleteTodo}>Delete Todo</button>\n  </li>\n);\n\nconst AddTodoForm = ({ addTodoItem }) => {\n  return <button onClick={addTodoItem}>Add Todo</button>;\n};\n\nclass TodoList extends React.Component {\n  state = {\n    todos: [\n      {\n        id: 1,\n        description: 'Get out of bed',\n        completed: false\n      },\n      {\n        id: 2,\n        description: 'Brush teeth',\n        completed: false\n      },\n      {\n        id: 3,\n        description: 'Eat breakfast',\n        completed: false\n      }\n    ]\n  };\n\n  addTodoItem = () => {\n    const newTodo = {\n      description: 'Eat lanch',\n      completed: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  };\n\n  toggleComplete = currentIndex => {\n    this.setState({\n      todos: this.state.todos.map((todo, index) => {\n        if (currentIndex === index) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n\n  deleteTodo = currentIndex => {\n    this.setState({\n      todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n    });\n  };\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return (\n      <>\n        {noTodos ? (\n          'No items!'\n        ) : (\n          <ul>\n            {this.state.todos.map((todo, index) => (\n              <TodoListItem\n                key={index}\n                todo={todo}\n                toggleComplete={() => this.toggleComplete(index)}\n                deleteTodo={() => this.deleteTodo(index)}\n              />\n            ))}\n          </ul>\n        )}\n        <AddTodoForm addTodoItem={this.addTodoItem} />\n      </>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>My todo list</h1>\n    <TodoList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}