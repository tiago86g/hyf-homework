{"ast":null,"code":"var _jsxFileName = \"/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/TodoList.js\";\nimport React from 'react';\nimport AddTodoForm from './AddTodoForm';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        description: 'Get out of bed',\n        completed: false\n      }, {\n        description: 'Brush teeth',\n        completed: false\n      }, {\n        description: 'Eat breakfast',\n        completed: false\n      }]\n    };\n\n    this.addTodoItem = description => {\n      const newTodo = {\n        description,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    this.toggleCompleted = currentIndex => {\n      this.setState({\n        todos: this.state.todos.map((todo, index) => {\n          if (currentIndex === index) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.deleteTodo = currentIndex => {\n      this.setState({\n        todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n      });\n    };\n  }\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodoForm, {\n      addTodoItem: this.addTodoItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), noTodos ? 'No items!' : /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyle: 'none',\n        paddingLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, this.state.todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n      style: {\n        border: '2px',\n        borderColor: 'black'\n      },\n      key: index,\n      todo: todo,\n      toggleCompleted: () => this.toggleCompleted(index),\n      deleteTodo: () => this.deleteTodo(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/TodoList.js"],"names":["React","AddTodoForm","TodoItem","TodoList","Component","state","todos","description","completed","addTodoItem","newTodo","setState","toggleCompleted","currentIndex","map","todo","index","deleteTodo","filter","_todos","render","noTodos","length","listStyle","paddingLeft","border","borderColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,WAAW,EAAE,gBADf;AAEEC,QAAAA,SAAS,EAAE;AAFb,OADK,EAKL;AACED,QAAAA,WAAW,EAAE,aADf;AAEEC,QAAAA,SAAS,EAAE;AAFb,OALK,EASL;AACED,QAAAA,WAAW,EAAE,eADf;AAEEC,QAAAA,SAAS,EAAE;AAFb,OATK;AADD,KAD6B;;AAAA,SAkBrCC,WAlBqC,GAkBvBF,WAAW,IAAI;AAC3B,YAAMG,OAAO,GAAG;AACdH,QAAAA,WADc;AAEdC,QAAAA,SAAS,EAAE;AAFG,OAAhB;AAIA,WAAKG,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBI,OAAtB;AADK,OAAd;AAGD,KA1BoC;;AAAA,SA4BrCE,eA5BqC,GA4BnBC,YAAY,IAAI;AAChC,WAAKF,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,cAAIH,YAAY,KAAKG,KAArB,EAA4B;AAC1B,mBAAO,EACL,GAAGD,IADE;AAELP,cAAAA,SAAS,EAAE,CAACO,IAAI,CAACP;AAFZ,aAAP;AAID,WALD,MAKO;AACL,mBAAOO,IAAP;AACD;AACF,SATM;AADK,OAAd;AAYD,KAzCoC;;AAAA,SA2CrCE,UA3CqC,GA2CxBJ,YAAY,IAAI;AAC3B,WAAKF,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,CAAwB,CAACC,MAAD,EAASH,KAAT,KAAmBH,YAAY,KAAKG,KAA5D;AADK,OAAd;AAGD,KA/CoC;AAAA;;AAiDrCI,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAAC,KAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,MAAlC;AACA,wBACE,uDACE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKb,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGY,OAAO,GACN,WADM,gBAGN;AAAI,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACpB,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OADT;AAEE,MAAA,GAAG,EAAEV,KAFP;AAGE,MAAA,IAAI,EAAED,IAHR;AAIE,MAAA,eAAe,EAAE,MAAM,KAAKH,eAAL,CAAqBI,KAArB,CAJzB;AAKE,MAAA,UAAU,EAAE,MAAM,KAAKC,UAAL,CAAgBD,KAAhB,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CALJ,CADF;AAoBD;;AAvEoC;;AA0EvC,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport AddTodoForm from './AddTodoForm';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n  state = {\n    todos: [\n      {\n        description: 'Get out of bed',\n        completed: false\n      },\n      {\n        description: 'Brush teeth',\n        completed: false\n      },\n      {\n        description: 'Eat breakfast',\n        completed: false\n      }\n    ]\n  };\n\n  addTodoItem = description => {\n    const newTodo = {\n      description,\n      completed: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  };\n\n  toggleCompleted = currentIndex => {\n    this.setState({\n      todos: this.state.todos.map((todo, index) => {\n        if (currentIndex === index) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n\n  deleteTodo = currentIndex => {\n    this.setState({\n      todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n    });\n  };\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return (\n      <>\n        <AddTodoForm addTodoItem={this.addTodoItem} />\n        {noTodos ? (\n          'No items!'\n        ) : (\n          <ul style={{ listStyle: 'none', paddingLeft: '0px' }}>\n            {this.state.todos.map((todo, index) => (\n              <TodoItem\n                style={{ border: '2px', borderColor: 'black' }}\n                key={index}\n                todo={todo}\n                toggleCompleted={() => this.toggleCompleted(index)}\n                deleteTodo={() => this.deleteTodo(index)}\n              />\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}