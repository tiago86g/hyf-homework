{"ast":null,"code":"var _jsxFileName = \"/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst TodoListItem = ({\n  todo,\n  toggleCompleted,\n  deleteTodo\n}) => /*#__PURE__*/React.createElement(\"li\", {\n  style: {\n    textDecoration: todo.completed ? 'line-through red' : 'none'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  checked: todo.completed,\n  onChange: toggleCompleted,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, todo.description), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  stile: color = red,\n  onClick: deleteTodo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, \"Delete Todo\")));\n\nclass AddTodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = event => this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      addTodoItem\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        addTodoItem(this.state.value);\n        this.setState({\n          value: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Add Todo\"), \";\");\n  }\n\n}\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        description: 'Get out of bed',\n        completed: true\n      }, {\n        description: 'Brush teeth',\n        completed: false\n      }, {\n        description: 'Eat breakfast',\n        completed: false\n      }]\n    };\n\n    this.addTodoItem = description => {\n      const newTodo = {\n        description,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    this.toggleCompleted = currentIndex => {\n      this.setState({\n        todos: this.state.todos.map((todo, index) => {\n          if (currentIndex === index) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.deleteTodo = currentIndex => {\n      this.setState({\n        todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n      });\n    };\n  }\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, noTodos ? 'No items!' : /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, this.state.todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoListItem, {\n      key: index,\n      todo: todo,\n      toggleCompleted: () => this.toggleCompleted(index),\n      deleteTodo: () => this.deleteTodo(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(AddTodoForm, {\n      addTodoItem: this.addTodoItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }\n}, \"My todo list\"), /*#__PURE__*/React.createElement(TodoList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tiago/Documents/HYF_CPH/hyf-homework/react/week2/my-app/src/index.js"],"names":["React","ReactDOM","TodoListItem","todo","toggleCompleted","deleteTodo","textDecoration","completed","description","color","red","AddTodoForm","Component","state","value","handleChange","event","setState","target","render","addTodoItem","props","preventDefault","TodoList","todos","newTodo","currentIndex","map","index","filter","_todos","noTodos","length","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst TodoListItem = ({ todo, toggleCompleted, deleteTodo }) => (\n  <li style={{ textDecoration: todo.completed ? 'line-through red' : 'none' }}>\n    <input\n      type='checkbox'\n      checked={todo.completed}\n      onChange={toggleCompleted}\n    />\n    <span>{todo.description}</span>\n    <div>\n      <button stile={(color = red)} onClick={deleteTodo}>\n        Delete Todo\n      </button>\n    </div>\n  </li>\n);\n\nclass AddTodoForm extends React.Component {\n  state = {\n    value: ''\n  };\n\n  handleChange = event =>\n    this.setState({\n      value: event.target.value\n    });\n  render() {\n    const { addTodoItem } = this.props;\n\n    return (\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          addTodoItem(this.state.value);\n          this.setState({\n            value: ''\n          });\n        }}>\n        <input\n          type='text'\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n        <button type='submit'>Add Todo</button>;\n      </form>\n    );\n  }\n}\n\nclass TodoList extends React.Component {\n  state = {\n    todos: [\n      {\n        description: 'Get out of bed',\n        completed: true\n      },\n      {\n        description: 'Brush teeth',\n        completed: false\n      },\n      {\n        description: 'Eat breakfast',\n        completed: false\n      }\n    ]\n  };\n\n  addTodoItem = description => {\n    const newTodo = {\n      description,\n      completed: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  };\n\n  toggleCompleted = currentIndex => {\n    this.setState({\n      todos: this.state.todos.map((todo, index) => {\n        if (currentIndex === index) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n\n  deleteTodo = currentIndex => {\n    this.setState({\n      todos: this.state.todos.filter((_todos, index) => currentIndex !== index)\n    });\n  };\n\n  render() {\n    const noTodos = !this.state.todos.length;\n    return (\n      <>\n        {noTodos ? (\n          'No items!'\n        ) : (\n          <ul>\n            {this.state.todos.map((todo, index) => (\n              <TodoListItem\n                key={index}\n                todo={todo}\n                toggleCompleted={() => this.toggleCompleted(index)}\n                deleteTodo={() => this.deleteTodo(index)}\n              />\n            ))}\n          </ul>\n        )}\n        <AddTodoForm addTodoItem={this.addTodoItem} />\n      </>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>My todo list</h1>\n    <TodoList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}